{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\webdev\\\\rubberducker\\\\frontend\\\\src\\\\TextLine.js\",\n  _s = $RefreshSig$();\nimport { useRef, forwardRef, useEffect } from 'react';\nimport DragSelect from 'dragselect';\nimport './App.css';\nimport { ArcherElement } from 'react-archer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextLine = _ref => {\n  _s();\n  let {\n    indent,\n    data,\n    handleClick,\n    createInDB,\n    editInDB,\n    storeNewRef,\n    deleteTextLine,\n    isHighlighted\n  } = _ref;\n  const inputStyle = {\n    width: '50%',\n    borderBottom: '1px solid black',\n    borderTop: '1px solid black',\n    backgroundColor: 'transparent',\n    resize: 'none',\n    fontSize: '1rem',\n    overflow: 'hidden',\n    overflowWrap: 'break-word',\n    fontFamily: 'monospace',\n    color: '#0abdc6',\n    borderRadius: '20px',\n    borderColor: '#0abdc6',\n    padding: '0.2rem',\n    paddingLeft: '1rem'\n  };\n  const textLineStyle = {\n    backgroundColor: isHighlighted ? '#0c2251' : 'transparent',\n    marginBottom: '3px',\n    display: \"flex\",\n    height: '30px'\n  };\n  const rightMarkerStyle = {\n    height: '100%',\n    width: '10px'\n  };\n  const leftMarkerStyle = {\n    height: '100%',\n    backgroundColor: 'green',\n    marginRight: indent > 0 ? 40 + 'px' : 0,\n    marginLeft: indent > 1 ? (indent - 1) * 40 + 'px' : 0\n  };\n  const textHasChanged = useRef(false);\n  // onBlur\n  const handleBlur = () => {\n    if (data.text.length === 0) {\n      deleteTextLine([data._id]);\n    }\n    // if text has changed\n    if (textHasChanged.current) {\n      // if not saved in DB\n      if (data._id.length !== 24) {\n        textHasChanged.current = false;\n        createInDB(data._id);\n      }\n      // if saved in DB\n      else {\n        textHasChanged.current = false;\n        editInDB(data._id, data.text);\n      }\n    }\n  };\n  const handleRef = ref => {\n    storeNewRef(data._id, ref);\n  };\n  const handleChange = e => {\n    if (!textHasChanged.current) textHasChanged.current = true;\n    data.text = e.target.value;\n  };\n  const relationsList = data.children.map(child => ({\n    targetId: child + \"MARKER\",\n    targetAnchor: 'middle',\n    sourceAnchor: 'left',\n    style: {\n      strokeColor: '#0abdc6',\n      strokeWidth: 1\n    }\n  })).concat({\n    targetId: data._id + \"MARKER\",\n    targetAnchor: 'middle',\n    sourceAnchor: 'right',\n    style: {\n      strokeColor: '#0abdc6',\n      strokeWidth: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    onClick: () => handleClick(data._id),\n    onBlur: handleBlur,\n    \"data-info\": data._id,\n    style: textLineStyle,\n    children: [/*#__PURE__*/_jsxDEV(ArcherElement, {\n      id: data._id + \"MARKER\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: leftMarkerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArcherElement, {\n      id: data._id,\n      relations: relationsList,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rightMarkerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"TextBox\",\n      type: \"text\",\n      defaultValue: data.text,\n      onChange: handleChange,\n      style: inputStyle,\n      ref: ref => handleRef(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(TextLine, \"pWBmjIjXzMQ0oPQzMee+rsJO2dA=\");\n_c = TextLine;\nexport { TextLine };\nvar _c;\n$RefreshReg$(_c, \"TextLine\");","map":{"version":3,"names":["useRef","forwardRef","useEffect","DragSelect","ArcherElement","jsxDEV","_jsxDEV","TextLine","_ref","_s","indent","data","handleClick","createInDB","editInDB","storeNewRef","deleteTextLine","isHighlighted","inputStyle","width","borderBottom","borderTop","backgroundColor","resize","fontSize","overflow","overflowWrap","fontFamily","color","borderRadius","borderColor","padding","paddingLeft","textLineStyle","marginBottom","display","height","rightMarkerStyle","leftMarkerStyle","marginRight","marginLeft","textHasChanged","handleBlur","text","length","_id","current","handleRef","ref","handleChange","e","target","value","relationsList","children","map","child","targetId","targetAnchor","sourceAnchor","style","strokeColor","strokeWidth","concat","className","onClick","onBlur","id","fileName","_jsxFileName","lineNumber","columnNumber","relations","type","defaultValue","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Admin/webdev/rubberducker/frontend/src/TextLine.js"],"sourcesContent":["import { useRef, forwardRef, useEffect } from 'react'\r\nimport DragSelect from 'dragselect'\r\nimport './App.css';\r\nimport { ArcherElement } from 'react-archer';\r\n\r\n\r\nconst TextLine = ({ indent, data, handleClick, createInDB, editInDB, storeNewRef, deleteTextLine, isHighlighted }) => {\r\n\r\n\r\n    const inputStyle = {\r\n        width: '50%',\r\n        borderBottom: '1px solid black',\r\n        borderTop: '1px solid black',\r\n        backgroundColor: 'transparent',\r\n        resize: 'none',\r\n        fontSize: '1rem',\r\n        overflow: 'hidden',\r\n        overflowWrap: 'break-word',\r\n        fontFamily: 'monospace',\r\n        color: '#0abdc6',\r\n        borderRadius: '20px',\r\n        borderColor: '#0abdc6',\r\n        padding: '0.2rem',\r\n        paddingLeft: '1rem'\r\n\r\n    }\r\n\r\n    const textLineStyle = {\r\n        backgroundColor: isHighlighted ? '#0c2251' : 'transparent',\r\n        marginBottom: '3px',\r\n        display: \"flex\",\r\n        height: '30px',\r\n\r\n    }\r\n\r\n    const rightMarkerStyle = {\r\n        height: '100%',\r\n        width: '10px',\r\n    }\r\n\r\n    const leftMarkerStyle = {\r\n        height: '100%',\r\n        backgroundColor: 'green',\r\n        marginRight: indent > 0 ? 40 + 'px' : 0,\r\n        marginLeft: indent > 1 ? (indent - 1) * 40 + 'px' : 0\r\n    }\r\n\r\n\r\n    const textHasChanged = useRef(false)\r\n    // onBlur\r\n    const handleBlur = () => {\r\n        if (data.text.length === 0) {\r\n            deleteTextLine([data._id])\r\n        }\r\n        // if text has changed\r\n        if (textHasChanged.current) {\r\n            // if not saved in DB\r\n            if (data._id.length !== 24) {\r\n                textHasChanged.current = false\r\n                createInDB(data._id)\r\n            }\r\n            // if saved in DB\r\n            else {\r\n                textHasChanged.current = false\r\n                editInDB(data._id, data.text)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRef = ref => {\r\n        storeNewRef(data._id, ref)\r\n    }\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        if (!textHasChanged.current) textHasChanged.current = true\r\n        data.text = e.target.value\r\n    }\r\n    \r\n    const relationsList = data.children.map(child => ({\r\n        targetId: child + \"MARKER\",\r\n        targetAnchor: 'middle',\r\n        sourceAnchor: 'left',\r\n        style: { strokeColor: '#0abdc6', strokeWidth: 1 },\r\n    })).concat({\r\n        targetId: data._id + \"MARKER\",\r\n        targetAnchor: 'middle',\r\n        sourceAnchor: 'right',\r\n        style: { strokeColor: '#0abdc6', strokeWidth: 1 },\r\n    })\r\n\r\n    return (\r\n        <div className=\"box\" onClick={() => handleClick(data._id)} onBlur={handleBlur} data-info={data._id} style={textLineStyle}>\r\n            <ArcherElement id={data._id + \"MARKER\"}\r\n            >\r\n                <div style={leftMarkerStyle}></div>\r\n            </ArcherElement>\r\n\r\n\r\n            <ArcherElement\r\n                id={data._id}\r\n                relations={relationsList}>\r\n                {/* <p style={{color:'white'}}>{textLine._id}</p> */}\r\n                <div style={rightMarkerStyle}></div>\r\n            </ArcherElement>\r\n            <input className=\"TextBox\" type=\"text\" defaultValue={data.text} onChange={handleChange} style={inputStyle} ref={ref => handleRef(ref)}>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TextLine };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}